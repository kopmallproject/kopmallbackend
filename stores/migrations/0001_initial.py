# Generated by Django 5.0.7 on 2024-09-22 23:24

import django.db.models.deletion
import django_lifecycle.mixins
import stores.models.order_model
import stores.models.store_model
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Date Updated')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='Name Of Category')),
            ],
            options={
                'ordering': ['-date_created'],
                'abstract': False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Date Updated')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('status', models.CharField(choices=[('PENDING', 'pending'), ('ONGOING', 'ongoing'), ('DELIVERED', 'delivered'), ('CLOSED', 'closed')], default='PENDING', max_length=15)),
                ('order_id', models.CharField(default=stores.models.order_model.get_random_ids, max_length=15)),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL)),
                ('shipping_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='shipping_orders', to='accounts.address')),
            ],
            options={
                'ordering': ['-date_created'],
                'abstract': False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Date Updated')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('name', models.CharField(max_length=100, verbose_name='Product Name')),
                ('overview', models.CharField(max_length=500, verbose_name='Product Overview Message')),
                ('description', models.TextField(blank=True, verbose_name='Product Description')),
                ('warranty', models.TextField(blank=True, verbose_name='Product Warranty')),
                ('image', models.ImageField(default=stores.models.store_model.get_default_pic, upload_to=stores.models.store_model.upload_to, verbose_name='Product Image')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Product Amount')),
                ('available_quantity', models.SmallIntegerField(default=1, verbose_name='Total quantity Available')),
                ('is_available', models.BooleanField(default=True, verbose_name='Product Available')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_products', to='stores.category', verbose_name='Category')),
            ],
            options={
                'ordering': ['-date_created'],
                'abstract': False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Date Updated')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('orderitem_id', models.CharField(default=stores.models.order_model.get_random_ids, max_length=15)),
                ('status', models.CharField(choices=[('PENDING', 'pending'), ('ONGOING', 'ongoing'), ('DELIVERED', 'delivered'), ('CLOSED', 'closed'), ('REFUNDED', 'refunded')], default='PENDING', max_length=15)),
                ('quantity', models.IntegerField()),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_items', to='stores.order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_orders', to='stores.product')),
            ],
            options={
                'ordering': ['-date_created'],
                'abstract': False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Date Updated')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('quantity', models.IntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_cart', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cart_product', to='stores.product', verbose_name='Product')),
            ],
            options={
                'ordering': ['-date_created'],
                'abstract': False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Date Updated')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('image', models.ImageField(default=stores.models.store_model.get_default_pic, upload_to=stores.models.store_model.upload_to, verbose_name='Product Image')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_images', to='stores.product', verbose_name='Product')),
            ],
            options={
                'ordering': ['-date_created'],
                'abstract': False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Date Updated')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('name', models.CharField(max_length=100, verbose_name='Name Of SubCategory')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_sub_cats', to='stores.category', verbose_name='Category')),
            ],
            options={
                'ordering': ['-date_created'],
                'abstract': False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
    ]
